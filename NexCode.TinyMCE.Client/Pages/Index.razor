@page "/"
@using NexCode.TinyMCE.Blazor.Plugins
@using NexCode.TinyMCE.Blazor.Plugins.MenuItem
@using NexCode.TinyMCE.Blazor.Plugins.Toolbar



<RichTextEditor DynamicPlugins="@(new[] { Plugin })" @ref="RichTextEditor" Options="Options">
    <strong>Test</strong>
</RichTextEditor>


@code
{


    private RichTextEditor RichTextEditor { get; set; }

    [Inject]
    private IJSRuntime JsRuntime { get; set; }

    public Index()
    {
        Plugin = new Plugin()
        {
            Name = "custom",
          
            /*Toolbar = new []
            {
                new GroupToolbarButton(){Text = "Test", Items = new []
                {
                    new LabelledToolbarButton(){Name = "alignment", Items = "alignleft aligncenter alignright | alignjustify".Split(" ")},
                }}
            },*/
            MenuItems = new []
            {
                new BasicMenuItem(){Text = "Test Menu", Id = "basicitem"}
            }
            
        };
    }


    private Plugin Plugin;

    private RichTextEditorOptions Options = new RichTextEditorOptions()
    {
            Plugins = "custom",
            //Toolbar = "test format",
            MenuBar = "custom"
    
    };


    private async void TestCall()
    {
        var module = await JsRuntime.InvokeAsync<IJSObjectReference>(
            "import", "./js/NewPlugin.js").AsTask();


        await module.InvokeVoidAsync("showDialog", RichTextEditor.Id);

    }
    

}
